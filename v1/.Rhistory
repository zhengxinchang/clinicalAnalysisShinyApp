summarise(count=n()) %>% ungroup() %>%
group_by(integrated_snn_res.0.35) %>%
summarise(pct=count/sum(count)*100,SingleR.labels) %>% ungroup() %>%  ggplot() +
geom_bar(aes(x=SingleR.labels,y=pct,fill=SingleR.labels),stat = "identity") + facet_grid(integrated_snn_res.0.35~.)  + theme_bw() +
theme(axis.text.x=element_text(angle = 60,hjust = 1))
ggsave(filename = "osteoporosis_normal.res0.35_label.pdf",device = "pdf",width = 20,height = 15,units = "in")
Idents(scrna.integrated)<-"integrated_snn_res.0.35"
VlnPlot(scrna.integrated, features = c("CCL5"))
VlnPlot(scrna.integrated, features = c("CCL5"),idents = "integrated_snn_res.0.35")
VlnPlot(scrna.integrated, features = c("CCL5"),idents = "integrated_snn_res.0.35",assay = "RNA")
#blood.se<-NovershternHematopoieticData()
#pred.scrna <- SingleR(test = scrna.integrated@assays$integrated@data, ref = blood.se, labels = blood.se$label.main)
#pred.scrna.fine <- SingleR(test = scrna.integrated@assays$integrated@data, ref = blood.se, labels = blood.se$label.fine)
#scrna.integrated[["SingleR.labels"]] <- pred.scrna$labels
#scrna.integrated[["SingleR.labels.fine"]] <- pred.scrna.fine$labels
#saveRDS(scrna.integrated,"osteoporosis_normal_scrna_integrated_clusters_singler.rds")
scrna.integrated <- readRDS("./osteoporosis_normal_scrna_integrated_clusters_singler.rds")
### Idents in this dataset is SingleR.label ###
library(Seurat)
library(SingleR)
library(tidyverse)
library(ReactomePA)
library(org.Hs.eg.db)
library(clusterProfiler)
library(Seurat)
library(SingleR)
library(tidyverse)
library(ReactomePA)
library(org.Hs.eg.db)
library(clusterProfiler)
library(Seurat)
library(SingleR)
library(tidyverse)
library(ReactomePA)
library(org.Hs.eg.db)
library(clusterProfiler)
#blood.se<-NovershternHematopoieticData()
#pred.scrna <- SingleR(test = scrna.integrated@assays$integrated@data, ref = blood.se, labels = blood.se$label.main)
#pred.scrna.fine <- SingleR(test = scrna.integrated@assays$integrated@data, ref = blood.se, labels = blood.se$label.fine)
#scrna.integrated[["SingleR.labels"]] <- pred.scrna$labels
#scrna.integrated[["SingleR.labels.fine"]] <- pred.scrna.fine$labels
#saveRDS(scrna.integrated,"osteoporosis_normal_scrna_integrated_clusters_singler.rds")
scrna.integrated <- readRDS("./osteoporosis_normal_scrna_integrated_clusters_singler.rds")
### Idents in this dataset is SingleR.label ###
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install(c('BiocGenerics', 'DelayedArray', 'DelayedMatrixStats',
'limma', 'S4Vectors', 'SingleCellExperiment',
'SummarizedExperiment', 'batchelor'))
install.packages("devtools")
install.packages("sf")
devtools::install_github('cole-trapnell-lab/monocle3')
devtools::install_github('cole-trapnell-lab/monocle3')
devtools::install_github('cole-trapnell-lab/monocle3')
install.packages("Rtools")
BiocManager::install("Rtools")
install.packages("Rtools")
BiocManager::install("Rtools")
?Seurat::FindAllMarkers()
library(shiny)
library(shiny.router)
library(ggplot2)
library(jsonlite)
library(eeptools)
library(dplyr)
library(tableone)
library(readxl)
options(shiny.usecairo = FALSE)
# 直接获得jason格式的临床数据
patient_data <- fromJSON("http://localhost:9196/amltest/dataAnalysis/patientData")
initial_data <- fromJSON("http://localhost:9196/amltest/dataAnalysis/initialData")
period_data <- fromJSON("http://localhost:9196/amltest/dataAnalysis/periodData")
ctcae_data <- fromJSON("http://localhost:9196/amltest/dataAnalysis/ctcaeData")
ctcae_soc_data <- fromJSON("http://localhost:9196/amltest/dataAnalysis/ctcaeSocData")
ctcae_soc_info_data <- fromJSON("http://localhost:9196/amltest/dataAnalysis/ctcaeSocInfoData")
ctcae_soc_info_grade_data <- fromJSON("http://localhost:9196/amltest/dataAnalysis/ctcaeSocInfoGradeData")
patient_data <- readxl::read_excel("../../git_repo/aml_projects/shiny_app/ver202009_1/tables_from_mysql/patient.xlsx")
initial_data <- readxl::read_excel("../../git_repo/aml_projects/shiny_app/ver202009_1/tables_from_mysql/initial.xlsx")
#==================================================
#
# generate unitable data frame
#
#==================================================
base_line_data <-initial_data %>% dplyr::select(patient_id,anc,wbc,plt,hb, mt_ckit,mt_nras,mt_cebp,mt_asxl1,mt_npm1) %>%
rename("CKIT"="mt_ckit","NRAS"="mt_nras","CEBPA"="mt_cebp","ASXL1"="mt_asxl1","NPM1"="mt_npm1") %>%
mutate_at(.vars = vars("patient_id",'anc',"wbc","plt",'hb'),.funs = as.numeric)
unified_data <- patient_data %>% left_join(base_line_data,by = "patient_id")  %>%
mutate_at(.vars = vars("sex"),.funs = as.character) %>% rename("Treatment"="aml_group") %>%
filter(Treatment =="1" | Treatment=="0") %>%
mutate_at(.vars = vars("Treatment"),.funs = function(x){ifelse(x=="1","SDC","LDC")}) %>%
rename("FAB"="aml_classify")
unified_data$Treatment <- as.character(unified_data$Treatment)
unified_data[which(unified_data$Treatment ==0),]$Treatment <-"LDC"
unified_data[which(unified_data$Treatment ==1),]$Treatment <-"SDC"
unified_data
unified_data$Treatment <- as.character(unified_data$Treatment)
unified_data[which(unified_data$Treatment ==0),]$Treatment <-"LDC"
View(unified_data)
runApp('E:/projects/bioinformatics_projects/MyShinyTest/app_1.R')
shiny::runApp('E:/projects/bioinformatics_projects/MyShinyTest')
shiny::runApp('E:/projects/bioinformatics_projects/MyShinyTest')
shiny::runApp('E:/projects/bioinformatics_projects/MyShinyTest')
shiny::runApp('E:/projects/bioinformatics_projects/MyShinyTest')
shiny::runApp('E:/projects/bioinformatics_projects/MyShinyTest')
runApp('E:/projects/bioinformatics_projects/MyShinyTest')
runApp('E:/projects/bioinformatics_projects/MyShinyTest')
runApp('E:/projects/bioinformatics_projects/MyShinyTest')
shiny::runApp('E:/projects/bioinformatics_projects/MyShinyTest')
shiny::runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
?ggpar
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
shiny::runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
runApp('E:/projects/git_repo/aml_database_zhengxc/v1')
library(Seurat)
library(Seurat)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(dplyr)
library(dplyr)
library(Seurat)
library(dplyr)
library(Seurat)
library(Seurat)
library(patchwork)
library(tidyverse)
library(magrittr)
library(org.Hs.eg.db)
library(AnnotationDbi)
install.packages("bit64")
library(AnnotationDbi)
library(org.Hs.eg.db)
library(clusterProfiler)
library(ReactomePA)
library(msigdf)
library(Seurat)
library(patchwork)
library(tidyverse)
library(magrittr)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(clusterProfiler)
library(ReactomePA)
library(msigdf)
scrna.integrated<-read_rds("./osteoporosis_normal_scrna_integrated_3_singler.rds")
setwd("E:/projects/bioinformatics_projects/osteoporosis/2020-11-22")
subdir<-"out4_SingleR_annotation_Analysis"
try(
dir.create(subdir)
)
library(Seurat)
library(patchwork)
library(tidyverse)
library(magrittr)
library(AnnotationDbi)
library(org.Hs.eg.db)
library(clusterProfiler)
library(ReactomePA)
library(msigdf)
scrna.integrated<-read_rds("./osteoporosis_normal_scrna_integrated_3_singler.rds")
setwd("E:/projects/bioinformatics_projects/osteoporosis/2020-11-22")
subdir<-"out4_SingleR_annotation_Analysis"
try(
dir.create(subdir)
)
camp_cell_percent<-scrna.integrated@meta.data %>% dplyr::select(group,group2,singler_main_blood) %>%
group_by(group2,singler_main_blood) %>% summarise(count=n()) %>% mutate(percent=round(count/sum(count)*100,2))%>%
dplyr::select(group2,singler_main_blood,percent) %>% ungroup()
camp_cell_percent%>% tidyr::spread(group2,percent)
camp_cell_percent %>% ggplot() +
geom_bar(aes(x=singler_main_blood,y=percent,fill=group2),stat = "identity",position = "dodge",color="black") +
theme_bw() +
theme(axis.text.x = element_text(angle = 30,hjust = 1)) +
xlab(label = "Cell Type") +
ylab(label = "Percent(%)")
cmp_cell_percent_each<-scrna.integrated@meta.data %>% dplyr::select(group,group2,singler_main_blood) %>%
group_by(group,singler_main_blood) %>% summarise(count=n()) %>% mutate(percent=count/sum(count)*100)%>%
dplyr::select(group,singler_main_blood,percent) %>% ungroup() %>% tidyr::spread(group,percent,fill=0)%>% tidyr::gather(key=group2,value=percent,-singler_main_blood)
cmp_cell_percent_each$group1 <- str_split(cmp_cell_percent_each$group2,"_",n=2,simplify = T)[,1]
cmp_cell_percent_each %>% ggplot() +
geom_boxplot(aes(x=singler_main_blood,y=percent,color=group1)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30,hjust = 1)) +
xlab(label = "Cell Type") +
ylab(label = "Percent(%)")
metdata <- scrna.integrated@meta.data
ldata <- list()
for (i in 1:9){
t <- paste0("integrated_snn_res.0.",i)
subdata<- metdata[,c(t,"singler_main_blood")] %>% dplyr::rename("cluster"=all_of(t))
lengs <- unique(subdata$cluster) %>% length()
lengs <- ceiling( (lengs/4) )
subdata %<>% dplyr::group_by(cluster,singler_main_blood) %>%
summarise(count=n())
subdata_total <- subdata %>% dplyr::group_by(cluster) %>% summarise(total=sum(count))
subdata %<>% left_join(subdata_total,by="cluster")
subdata %<>% mutate(percent=round(count/total*100,4))
p<-ggplot(data=subdata) + geom_bar(aes(x=singler_main_blood,y=percent,fill=singler_main_blood),
stat = "identity")+
facet_wrap(.~cluster,scales = "free",ncol= 4) +
theme_bw() + theme(title = element_text(hjust = 0.5)) +
guides(fill=FALSE) +coord_flip() +ggtitle(label = t) +
theme(plot.title = element_text(hjust = 0.5))
ggsave(plot = p,filename = paste0(subdir,"/","define_best_singler_cluster_res0.",i,".pdf"),width = 16,height = 4*lengs)
ldata[[t]]<-subdata
rm(t)
rm(p)
rm(lengs)
rm(subdata)
}
Idents(scrna.integrated)<-scrna.integrated$singler_main_blood
#comb<-DimPlot(scrna.integrated, reduction = "tsne",combine = T)
DimPlot(scrna.integrated, reduction = "umap",combine = T,label = T,label.size = 3)
combtsne<-DimPlot(scrna.integrated, reduction = "tsne",group.by = "group2",combine = T)
combumap<-DimPlot(scrna.integrated, reduction = "umap",group.by = "group2",combine = T)
combtsne +combumap
septsne<-DimPlot(scrna.integrated, reduction = "tsne",split.by = "group2",combine = T)
sepumap<-DimPlot(scrna.integrated, reduction = "umap",split.by = "group2",combine = T)
septsne /sepumap
monocyte <- WhichCells(scrna.integrated, idents = c("Hemato.Monocytes"))
DimPlot(scrna.integrated, label=F, group.by="singler_main_blood",split.by = "group2", cells.highlight= list(monocyte), cols.highlight = c("darkblue"), cols= "grey",reduction = "tsne")
Idents(scrna.integrated)<- scrna.integrated$singler_fine_blood
cfu_monocyte <- WhichCells(scrna.integrated, idents = c( "Hemato.Colony Forming Unit-Monocytes"))
monocyte <- WhichCells(scrna.integrated, idents = c("Hemato.Monocytes"))
p1<-DimPlot(scrna.integrated, label=F, group.by="singler_fine_blood",split.by = "group2", cells.highlight= list(cfu_monocyte,monocyte), cols.highlight = c("darkred","darkblue"), cols= "grey",reduction = "tsne",combine = T)
p1 + scale_color_manual(labels = c("Other","CUF_MONOCYTE", "MONOCYTE"),values = c("grey","darkred","darkblue"))
Idents(scrna.integrated)<- scrna.integrated$singler_fine_blood
cfu_monocyte <- WhichCells(scrna.integrated, idents = c( "Hemato.Colony Forming Unit-Monocytes"))
monocyte <- WhichCells(scrna.integrated, idents = c("Hemato.Monocytes"))
monodata <- subset(scrna.integrated,idents=c("Hemato.Colony Forming Unit-Monocytes","Hemato.Monocytes"))
p2<-DimPlot(monodata, label=F, group.by="singler_fine_blood",split.by = "group2", cells.highlight= list(cfu_monocyte,monocyte), cols.highlight = c("darkred","darkblue"),reduction = "tsne",combine = T)
p2 + scale_color_manual(labels = c("CUF_MONOCYTE", "MONOCYTE"),values = c("darkred","darkblue"))
Idents(scrna.integrated)<- scrna.integrated$singler_fine_blood
monodata_cfus <- subset(scrna.integrated,idents=c("Hemato.Colony Forming Unit-Monocytes"))
Idents(monodata_cfus) <-monodata_cfus$group2
monodata_cfus_osteo<-subset(monodata_cfus,idents=c("osteoporosis"))
p2<-DimPlot(monodata_cfus_osteo, label=F, group.by="group",reduction = "tsne",combine = T)
p2<-p2 +guides(color=FALSE)
p3 <- DimPlot(monodata_cfus_osteo, label=F, group.by="group",split.by="group",reduction = "tsne",combine = T)
(p2 + plot_spacer()+ plot_spacer()) /p3
monodata_mono.marker.sig.entrizid<-bitr(geneID=rownames(monodata_mono.marker.sig),fromType="ENSEMBL",toType="ENTREZID",OrgDb="org.Hs.eg.db")
combtsne<-DimPlot(scrna.integrated, reduction = "tsne",group.by = "group2",combine = T)
combumap<-DimPlot(scrna.integrated, reduction = "umap",group.by = "group2",combine = T)
combtsne +combumap
scrna.integrated$singler_main_blood %>% uunique()
scrna.integrated$singler_main_blood %>% unique()
CD8 <- WhichCells(scrna.integrated, idents = c("Hemato.CD8+ T cells"))
Idents(scrna.integrated) <-  scrna.integrated$singler_main_blood
CD8 <- WhichCells(scrna.integrated, idents = c("Hemato.CD8+ T cells"))
DimPlot(scrna.integrated, label=F, group.by="singler_main_blood",split.by = "group2", cells.highlight= list(CD8), cols.highlight = c("darkblue"), cols= "grey",reduction = "tsne")
DimPlot(scrna.integrated, label=F, group.by="singler_main_blood",split.by = "group2", cells.highlight= list(CD8), cols.highlight = c("darkblue"), cols= "grey",reduction = "tsne")
cd8T <- WhichCells(scrna.integrated, idents = c( "Hemato.CD8+ T cells"))
cd4T <- WhichCells(scrna.integrated, idents = c("Hemato.CD4+ T cells"))
Tcells <- subset(scrna.integrated,idents=c("Hemato.CD8+ T cells","Hemato.CD4+ T cells"))
p2<-DimPlot(Tcells, label=F, group.by="singler_main_blood",split.by = "group2", cells.highlight= list(cd8T,cd4T), cols.highlight = c("darkred","darkblue"),reduction = "tsne",combine = T)
cd8T <- WhichCells(scrna.integrated, idents = c( "Hemato.CD8+ T cells"))
cd8T <- WhichCells(scrna.integrated, idents = c( "Hemato.CD8+ T cells"))
cd4T <- WhichCells(scrna.integrated, idents = c("Hemato.CD4+ T cells"))
Tcells <- subset(scrna.integrated,idents=c("Hemato.CD8+ T cells","Hemato.CD4+ T cells"))
p2<-DimPlot(Tcells, label=F, group.by="singler_main_blood",split.by = "group2", cells.highlight= list(cd8T,cd4T), cols.highlight = c("darkred","darkblue"),reduction = "tsne",combine = T)
p2 + scale_color_manual(labels = c("CD8T", "CD4T"),values = c("darkred","darkblue"))
Idents(scrna.integrated) <-  scrna.integrated$singler_main_blood
CD8 <- WhichCells(scrna.integrated, idents = c("Hemato.CD8+ T cells"))
DimPlot(scrna.integrated, label=F, group.by="singler_main_blood",split.by = "group2", cells.highlight= list(CD8), cols.highlight = c("darkblue"), cols= "grey",reduction = "tsne")
Idents(scrna.integrated) <-  scrna.integrated$singler_main_blood
CD4 <- WhichCells(scrna.integrated, idents = c("Hemato.CD4+ T cells"))
DimPlot(scrna.integrated, label=F, group.by="singler_main_blood",split.by = "group2", cells.highlight= list(CD4), cols.highlight = c("darkblue"), cols= "grey",reduction = "tsne")
p2<-DimPlot(Tcells, label=F, group.by="singler_main_blood",split.by = "group2", cells.highlight= list(cd8T,cd4T),reduction = "tsne",combine = T)
p2 + scale_color_manual(labels = c("CD8T", "CD4T"),values = c("darkred","darkblue"))
p2<-DimPlot(Tcells, label=F, group.by="singler_main_blood",split.by = "group2", cells.highlight= list(cd8T,cd4T),reduction = "tsne",combine = T)
p2 + scale_color_manual(labels = c("CD4T", "CD8T"),values = c("darkred","darkblue"))
setwd("E:/projects/bioinformatics_projects/osteoporosis/2020-11-22")
setwd("E:/projects/bioinformatics_projects/osteoporosis/2020-11-22")
camp_cell_percent %>% ggplot() +
geom_bar(aes(x=singler_main_blood,y=percent,fill=group2),stat = "identity",position = "dodge",color="black") +
theme_bw() +
theme(axis.text.x = element_text(angle = 30,hjust = 1)) +
xlab(label = "Cell Type") +
ylab(label = "Percent(%)")
cmp_cell_percent_each<-scrna.integrated@meta.data %>% dplyr::select(group,group2,singler_main_blood) %>%
group_by(group,singler_main_blood) %>% summarise(count=n()) %>% mutate(percent=count/sum(count)*100)%>%
dplyr::select(group,singler_main_blood,percent) %>% ungroup() %>% tidyr::spread(group,percent,fill=0)%>% tidyr::gather(key=group2,value=percent,-singler_main_blood)
cmp_cell_percent_each$group1 <- str_split(cmp_cell_percent_each$group2,"_",n=2,simplify = T)[,1]
cmp_cell_percent_each %>% ggplot() +
geom_boxplot(aes(x=singler_main_blood,y=percent,color=group1)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30,hjust = 1)) +
xlab(label = "Cell Type") +
ylab(label = "Percent(%)")
cmp_cell_percent_each<-scrna.integrated@meta.data %>% dplyr::select(group,group2,singler_main_blood) %>%
group_by(group,singler_main_blood) %>% summarise(count=n()) %>% mutate(percent=count/sum(count)*100)%>%
dplyr::select(group,singler_main_blood,percent) %>% ungroup() %>% tidyr::spread(group,percent,fill=0)%>% tidyr::gather(key=group2,value=percent,-singler_main_blood)
cmp_cell_percent_each$group1 <- str_split(cmp_cell_percent_each$group2,"_",n=2,simplify = T)[,1]
cmp_cell_percent_each %>% ggplot() +
geom_boxplot(aes(x=singler_main_blood,y=percent,color=group1)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 30,hjust = 1)) +
xlab(label = "Cell Type") +
ylab(label = "Percent(%)")
Idents(scrna.integrated)<- scrna.integrated$singler_fine_blood
cfu_monocyte <- WhichCells(scrna.integrated, idents = c( "Hemato.Colony Forming Unit-Monocytes"))
monocyte <- WhichCells(scrna.integrated, idents = c("Hemato.Monocytes"))
p1<-DimPlot(scrna.integrated, label=F, group.by="singler_fine_blood",split.by = "group2", cells.highlight= list(cfu_monocyte,monocyte), cols.highlight = c("darkred","darkblue"), cols= "grey",reduction = "tsne",combine = T)
p1 + scale_color_manual(labels = c("Other","CUF_MONOCYTE", "MONOCYTE"),values = c("grey","darkred","darkblue"))
Idents(scrna.integrated)<- scrna.integrated$singler_fine_blood
cfu_monocyte <- WhichCells(scrna.integrated, idents = c( "Hemato.Colony Forming Unit-Monocytes"))
monocyte <- WhichCells(scrna.integrated, idents = c("Hemato.Monocytes"))
p1<-DimPlot(scrna.integrated, label=F, group.by="singler_fine_blood",split.by = "group2", cells.highlight= list(cfu_monocyte,monocyte), cols= "grey",reduction = "tsne",combine = T)
p1 + scale_color_manual(labels = c("Other","CUF_MONOCYTE", "MONOCYTE"),values = c("grey","darkred","darkblue"))
Idents(scrna.integrated)<- scrna.integrated$singler_fine_blood
cfu_monocyte <- WhichCells(scrna.integrated, idents = c( "Hemato.Colony Forming Unit-Monocytes"))
monocyte <- WhichCells(scrna.integrated, idents = c("Hemato.Monocytes"))
p1<-DimPlot(scrna.integrated, label=F, group.by="singler_fine_blood",split.by = "group2", cells.highlight= list(cfu_monocyte,monocyte), cols.highlight = c("darkred","darkblue"), cols= "grey",reduction = "tsne",combine = T)
p1 + scale_color_manual(labels = c("Other","CUF_MONOCYTE", "MONOCYTE"),values = c("grey","darkred","darkblue"))
Idents(scrna.integrated)<- scrna.integrated$singler_fine_blood
cfu_monocyte <- WhichCells(scrna.integrated, idents = c( "Hemato.Colony Forming Unit-Monocytes"))
monocyte <- WhichCells(scrna.integrated, idents = c("Hemato.Monocytes"))
p1<-DimPlot(scrna.integrated, label=F, group.by="singler_fine_blood",split.by = "group2", cells.highlight= list(cfu_monocyte,monocyte), cols.highlight = c("darkred","darkblue"), cols= "grey",reduction = "tsne",combine = T)
p1 + scale_color_manual(labels = c("Other","CUF_MONOCYTE", "MONOCYTE"),values = c("grey","darkbule","darkred"))
Idents(scrna.integrated)<- scrna.integrated$singler_fine_blood
cfu_monocyte <- WhichCells(scrna.integrated, idents = c( "Hemato.Colony Forming Unit-Monocytes"))
monocyte <- WhichCells(scrna.integrated, idents = c("Hemato.Monocytes"))
p1<-DimPlot(scrna.integrated, label=F, group.by="singler_fine_blood",split.by = "group2", cells.highlight= list(cfu_monocyte,monocyte), cols.highlight = c("darkred","darkblue"), cols= "grey",reduction = "tsne",combine = T)
p1 + scale_color_manual(labels = c("Other","CUF_MONOCYTE", "MONOCYTE"),values = c("grey","darkblue","darkred"))
Idents(scrna.integrated)<- scrna.integrated$singler_fine_blood
cfu_monocyte <- WhichCells(scrna.integrated, idents = c( "Hemato.Colony Forming Unit-Monocytes"))
monocyte <- WhichCells(scrna.integrated, idents = c("Hemato.Monocytes"))
p1<-DimPlot(scrna.integrated, label=F, group.by="singler_fine_blood",split.by = "group2", cells.highlight= list(cfu_monocyte,monocyte), cols.highlight = c("darkred","darkblue"), cols= "grey",reduction = "tsne",combine = T)
p1 + scale_color_manual(labels = c("Other", "MONOCYTE","CUF_MONOCYTE"),values = c("grey","darkblue","darkred"))
Idents(scrna.integrated)<- scrna.integrated$singler_fine_blood
monodata_cfus <- subset(scrna.integrated,idents=c("Hemato.CD8+ T cells","Hemato.CD4+ T cells"))
Idents(scrna.integrated)<- scrna.integrated$singler_main_blood
CDT <- subset(scrna.integrated,idents=c("Hemato.CD8+ T cells","Hemato.CD4+ T cells"))
Idents(CDT) <-CDT$group2
monodata_cfus_osteo<-subset(CDT,idents=c("osteoporosis"))
p2<-DimPlot(monodata_cfus_osteo, label=F, group.by="group",reduction = "tsne",combine = T)
p2<-p2 +guides(color=FALSE)
p3 <- DimPlot(monodata_cfus_osteo, label=F, group.by="group",split.by="group",reduction = "tsne",combine = T)
(p2 + plot_spacer()+ plot_spacer()) /p3
Idents(scrna.integrated)<- scrna.integrated$singler_fine_blood
Idents(scrna.integrated)<- scrna.integrated$singler_fine_blood
b<- read.table("./TARGET_NOWT1_matrix.txt",sep="\t",header=T,stringsAsFactors = F)
bwt1 <- b %>% filter(gene=="ENSG00000184937" | gene =="ENSG00000183242" ) %>% as.data.frame() %>% column_to_rownames(var = "gene") %>% t() %>% as.data.frame()
colnames(twt1) <- c("WT1-AS","WT1")
bwt1 <- b %>% filter(gene=="ENSG00000184937" | gene =="ENSG00000183242" ) %>% as.data.frame() %>% column_to_rownames(var = "gene") %>% t() %>% as.data.frame()
colnames(bwt1) <- c("WT1-AS","WT1")
bwt1$group<-"TAEGET_NO_WT1"
bwt1$`WT1-AS`<- bwt1$`WT1-AS`/2
bwt1$WT1<- bwt1$WT1/2
t<-read.table("./TARGET_WT1_matrix.txt",sep="\t",header=T,stringsAsFactors = F)
twt1 <- t %>% filter(gene=="ENSG00000184937" | gene =="ENSG00000183242" ) %>% as.data.frame() %>% column_to_rownames(var = "gene") %>% t() %>% as.data.frame()
colnames(twt1) <- c("WT1-AS","WT1")
twt1$group<-"TAEGET_WT1"
twt1$`WT1-AS`<- twt1$`WT1-AS`/2
twt1$WT1<- twt1$WT1/2
b<- read.table("./TARGET_NOWT1_matrix.txt",sep="\t",header=T,stringsAsFactors = F)
bwt1 <- b %>% filter(gene=="ENSG00000184937" | gene =="ENSG00000183242" ) %>% as.data.frame() %>% column_to_rownames(var = "gene") %>% t() %>% as.data.frame()
colnames(bwt1) <- c("WT1-AS","WT1")
bwt1$group<-"TAEGET_NO_WT1"
bwt1$`WT1-AS`<- bwt1$`WT1-AS`/2
bwt1$WT1<- bwt1$WT1/2
p <- read.table("./test_GEP_rep_gt0",header = T,sep = "\t",stringsAsFactors = F)
pwt1 <- p %>% filter(Gene=="WT1" | Gene=="WT1-AS") %>% select(Gene,IV14_chu,IV14_fu) %>% as.data.frame() %>% column_to_rownames(var = "Gene") %>%t()%>% as.data.frame() %>% dplyr::select(`WT1-AS`,WT1)
pwt1$group<-"Pedigree"
wt1_all<-rbind(twt1,pwt1,bwt1)
wt1_all %<>% arrange(WT1) %>% rownames_to_column("Sample")
ggplot(data=wt1_all) + geom_point(aes(x=reorder(wt1_all$Sample,wt1_all$WT1),y=WT1,color=group)) + theme_bw() +
theme(axis.text.x = element_text(angle = 60,hjust = 1))
n <-read.csv("./GTEx/GTExWT1_PCNA.csv",header = F)
n <-read.csv("./GTEx/GTExWT1_PCNA.csv",header = F)
n <-read.csv("./GTExWT1_PCNA.csv",header = F)
names(n)<-c("Sample","WT1-AS","WT1","PCNA")
n %<>% column_to_rownames(var = "Sample")
n$WT1_Ratio<-n$WT1/n$PCNA
n$`WT1-AS_Ratio`<-n$`WT1-AS`/n$PCNA
n$group<-"Normal"
b<-read.table("./TARGET_NOWT1_matrix.txt",sep="\t",header=T,stringsAsFactors = F)
bwt2 <- b %>% filter(gene=="ENSG00000184937" | gene =="ENSG00000183242" | gene =="ENSG00000132646") %>% as.data.frame() %>% column_to_rownames(var = "gene") %>% b() %>% as.data.frame()
bwt2 <- b %>% filter(gene=="ENSG00000184937" | gene =="ENSG00000183242" | gene =="ENSG00000132646") %>% as.data.frame() %>% column_to_rownames(var = "gene") %>% t() %>% as.data.frame()
colnames(bwt2) <- c("WT1-AS","WT1","PCNA")
bwt2$group<-"TAEGET"
bwt2$`WT1-AS_Ratio`<-bwt2$`WT1-AS`/twt2$PCNA
bwt2$WT1_Ratio<-bwt2$WT1/twt2$PCNA
bwt2 <- b %>% filter(gene=="ENSG00000184937" | gene =="ENSG00000183242" | gene =="ENSG00000132646") %>% as.data.frame() %>% column_to_rownames(var = "gene") %>% t() %>% as.data.frame()
colnames(bwt2) <- c("WT1-AS","WT1","PCNA")
bwt2$group<-"TAEGET_NOWT1"
bwt2$`WT1-AS_Ratio`<-bwt2$`WT1-AS`/bwt2$PCNA
bwt2$WT1_Ratio<-bwt2$WT1/bwt2$PCNA
t<-read.table("./TARGET_WT1_matrix.txt",sep="\t",header=T,stringsAsFactors = F)
twt2 <- t %>% filter(gene=="ENSG00000184937" | gene =="ENSG00000183242" | gene =="ENSG00000132646") %>% as.data.frame() %>% column_to_rownames(var = "gene") %>% t() %>% as.data.frame()
colnames(twt2) <- c("WT1-AS","WT1","PCNA")
twt2$group<-"TAEGET_WT1"
twt2$`WT1-AS_Ratio`<-twt2$`WT1-AS`/twt2$PCNA
twt2$WT1_Ratio<-twt2$WT1/twt2$PCNA
p <- read.table("./test_GEP_rep_gt0",header = T,sep = "\t",stringsAsFactors = F)
pwt2 <- p %>% filter(Gene=="WT1" | Gene=="WT1-AS"| Gene=="PCNA") %>% select(Gene,IV14_chu,IV14_fu) %>% as.data.frame() %>% column_to_rownames(var = "Gene") %>%t()%>% as.data.frame() %>% dplyr::select(`WT1-AS`,WT1,PCNA)
pwt2$`WT1-AS_Ratio`<-pwt2$`WT1-AS`/pwt2$PCNA
pwt2$WT1_Ratio<-pwt2$WT1/pwt2$PCNA
pwt2$group<-"Pedigree"
n <-read.csv("./GTExWT1_PCNA.csv",header = F)
names(n)<-c("Sample","WT1-AS","WT1","PCNA")
n %<>% column_to_rownames(var = "Sample")
n$WT1_Ratio<-n$WT1/n$PCNA
n$`WT1-AS_Ratio`<-n$`WT1-AS`/n$PCNA
n$group<-"Normal"
wt2_all<-rbind(twt2,pwt2,bwt2,n)
wt2_all %<>% arrange(WT1_Ratio) %>% rownames_to_column("Sample") %>% filter(Sample !="PATIAK.09A.01R_RPKM")
ggplot(data=wt2_all) + geom_point(aes(x=reorder(wt2_all$Sample,wt2_all$WT1_Ratio),y=WT1_Ratio,color=group),size=2) + theme_bw() +
theme(axis.text.x = element_blank(),panel.grid.major = element_blank()) + xlab(label = "Sample") + ylab(label = "WT1/PCNA Ratio")
wt2_all$Group<-ifelse(wt2_all$group=="Normal","Normal","AML")
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML")), label = "p.signif")
library(tidyverse)
library(magrittr)
library(ggpubr)
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML")), label = "p.signif")
wt2_all$Group<-ifelse(wt2_all$group=="Normal","Normal",ifelse(wt2_all$group=="TAEGET_NOWT1","AML_Without_WT1","AML_with_WT1"))
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML_Without_WT1"),c("Normal","AML_With_WT1")), label = "p.signif")
wt2_all$Group
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML_Without_WT1"),c("Normal","AML_With_WT1")), label = "p.signif")
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML_Without_WT1"),c("Normal","AML_With_WT1")), label = "p.signif",method = "t.test")
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML_Without_WT1"),c("Normal","AML_With_WT1")), label = "p.signif",method = "wilcox.test")
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML_Without_WT1"),c("Normal","AML_With_WT1")), label = "p.signif",method = "kruskal.test")
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML_Without_WT1"),c("Normal","AML_With_WT1")), label = "p.signif",method = "anova")
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML_Without_WT1"),c("Normal","AML_With_WT1")), label = "p.signif",method = "wilcox.test")
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML_Without_WT1"),c("Normal","AML_With_WT1")), label = "p.signif",method = "wilcox.test",paired = F)
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML_Without_WT1"),c("Normal","AML_With_WT1")), label = "p.signif",method = "t.test",paired = F)
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML_Without_WT1"),c("Normal","AML_With_WT1")), label = "p.signif",method = "wilcox.test",paired = F)
view(n)
sample(40,seq(0,nrow(n)),replace = F)
seq(0,nrow(n)
fsadfasd
)
seq(0,nrow(n))
nrow(n)
sample(40,seq(0,nrow(b)),replace = F)
sample(seq(0,nrow(b)),40,replace = F)
nrow(b)
sample(seq(0,nrow(bwt2)),40,replace = F)
bwt2<- bwt2[sample(seq(0,nrow(bwt2)),40,replace = F),]
wt2_all<-rbind(twt2,pwt2,bwt2,n)
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML_Without_WT1"),c("Normal","AML_With_WT1")), label = "p.signif",method = "wilcox.test",paired = F)
wt2_all$Group<-ifelse(wt2_all$group=="Normal","Normal",ifelse(wt2_all$group=="TAEGET_NOWT1","AML_Without_WT1","AML_with_WT1"))
ggpubr::ggboxplot(data = wt2_all,x = "Group",y="WT1_Ratio",color = "group",palette = "jco",add="jitter",ylab = "WT1/PCNA Ratio") +
stat_compare_means(comparisons = list(c("Normal","AML_Without_WT1"),c("Normal","AML_With_WT1")), label = "p.signif",method = "wilcox.test",paired = F)
ggsave("WT1_PCNA_ratio3_Box.pdf",device = "pdf",width = 6,height = 4,units = "in")
wilcox.test(n$WT1_Ratio,bwt2$WT1_Ratio)
wilcox.test(n$WT1_Ratio,pwt2$WT1_Ratio)
wilcox.test(n$WT1_Ratio,twt2$WT1_Ratio)
wilcox.test(b$WT1_Ratio,twt2$WT1_Ratio)
wilcox.test(bwt2$WT1_Ratio,twt2$WT1_Ratio)
wilcox.test(n$WT1_Ratio,bwt2$WT1_Ratio)
wilcox.test(n$WT1_Ratio,pwt2$WT1_Ratio)
wilcox.test(n$WT1_Ratio,c(pwt2$WT1_Ratio,twt2$WT1_Ratio))
wilcox.test(bwt2$WT1_Ratio,c(pwt2$WT1_Ratio,twt2$WT1_Ratio))
setwd("E:/projects/git_repo/aml_database_zhengxc/v1")
shiny::runApp()
